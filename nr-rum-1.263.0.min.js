/*! For license information please see nr-rum-1.263.0.min.js.LICENSE.txt */
"use strict";
(self["webpackChunk:NRBA-1.263.0.PROD"] = self["webpackChunk:NRBA-1.263.0.PROD"] || []).push([[296], {
    9527: (e, t, n) => {
        n.d(t, {
            n: () => c
        });
        var r = n(9422),
            i = n(4777),
            s = n(7494),
            a = n(2838),
            o = n(2614);
        class c extends i.J {
            constructor(e, t, n)
            {
                super(n),
                this.endpoint = e,
                this.opts = t || {},
                this.started = !1,
                this.timeoutHandle = null,
                this.aborted = !1,
                this.harvesting = !1,
                this.harvest = new s.M(this.sharedContext),
                (0, a.Q)(this.unload.bind(this)), this.sharedContext?.ee.on(o.tS.RESET, (() => this.runHarvest({
                    forceNoRetry: !0
                })))
            }
            unload()
            {
                this.aborted || (this.opts.onUnload && this.opts.onUnload(), this.runHarvest({
                    unload: !0
                }))
            }
            startTimer(e, t)
            {
                this.interval = e,
                this.started = !0,
                this.scheduleHarvest(null != t ? t : this.interval)
            }
            stopTimer()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                this.aborted = e,
                this.started = !1,
                this.timeoutHandle && clearTimeout(this.timeoutHandle)
            }
            scheduleHarvest(e, t)
            {
                this.timeoutHandle || (null == e && (e = this.interval), this.timeoutHandle = setTimeout((() => {
                    this.timeoutHandle = null,
                    this.runHarvest(t)
                }), 1e3 * e))
            }
            runHarvest(e)
            {
                if (this.aborted)
                    return;
                this.harvesting = !0;
                const t = t => {
                    this.harvesting = !1,
                    e?.forceNoRetry && (t.retry = !1),
                    this.onHarvestFinished(e, t)
                };
                let n,
                    i,
                    s = [];
                if (this.opts.getPayload) {
                    if (n = r.mj({
                        isFinalHarvest:e?.unload
                    }), !n)
                        return !1;
                    const t = !e?.unload && n === r.nF;
                    if (i = this.opts.getPayload({
                        retry: t,
                        ...e
                    }), !i)
                        return void (this.started && this.scheduleHarvest());
                    i = "[object Array]" === Object.prototype.toString.call(i) ? i : [i],
                    s.push(...i)
                }
                let a = e => this.harvest.sendX(e);
                s.length ? a = this.opts.raw ? e => this.harvest._send(e) : e => this.harvest.send(e) : s.push(void 0),
                s.forEach((r => {
                    a({
                        endpoint: this.endpoint,
                        payload: r,
                        opts: e,
                        submitMethod: n,
                        cbFinished: t,
                        customUrl: this.opts.customUrl,
                        raw: this.opts.raw
                    })
                })),
                this.started && this.scheduleHarvest()
            }
            onHarvestFinished(e, t)
            {
                if (this.opts.onFinished && this.opts.onFinished(t), t.sent && t.retry) {
                    const n = t.delay || this.opts.retryDelay;
                    this.started && n ? (clearTimeout(this.timeoutHandle), this.timeoutHandle = null, this.scheduleHarvest(n, e)) : !this.started && n && this.scheduleHarvest(n, e)
                }
            }
        }
    },
    7494: (e, t, n) => {
        n.d(t, {
            M: () => O
        });
        var r = n(1478),
            i = n(3304),
            s = {
                "%2C": ",",
                "%3A": ":",
                "%2F": "/",
                "%40": "@",
                "%24": "$",
                "%3B": ";"
            },
            a = (0, r.$)(s, (function(e) {
                return e
            })),
            o = new RegExp(a.join("|"), "g");
        function c(e) {
            return s[e]
        }
        function u(e) {
            return null == e ? "null" : encodeURIComponent(e).replace(o, c)
        }
        function h(e, t) {
            var n = 0,
                s = "";
            return (0, r.$)(e, (function(e, r) {
                var a,
                    o,
                    c = [];
                if ("string" == typeof r || !Array.isArray(r) && null != r && r.toString().length)
                    a = "&" + e + "=" + u(r),
                    n += a.length,
                    s += a;
                else if (Array.isArray(r) && r.length) {
                    for (n += 9, o = 0; o < r.length && (a = u((0, i.A)(r[o])), n += a.length, !(void 0 !== t && n >= t)); o++)
                        c.push(a);
                    s += "&" + e + "=%5B" + c.join(",") + "%5D"
                }
            })), s
        }
        function l(e, t) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            return Object.keys(n).includes(e) ? "" : t && "string" == typeof t ? "&" + e + "=" + u(t) : ""
        }
        var d = n(9422);
        function f() {
            return "" + location
        }
        var p = n(2983),
            m = n(9119),
            g = n(3878),
            v = n(4903);
        function y(e, t) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "string",
                r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [];
            return e && "object" == typeof e ? (Object.keys(e).forEach((i => {
                "object" == typeof e[i] ? y(e[i], t, n, r) : typeof e[i] !== n || r.includes(i) || (e[i] = t(e[i]))
            })), e) : e
        }
        var T = n(4777),
            b = n(9324),
            w = n(6154),
            S = n(944),
            E = n(1863);
        const M = {};
        class O extends T.J {
            constructor(e)
            {
                super(e),
                this.tooManyRequestsDelay = (0, p.gD)(this.sharedContext.agentIdentifier, "harvest.tooManyRequestsDelay") || 60,
                this.obfuscator = new v.FL(this.sharedContext),
                this._events = {}
            }
            sendX()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                const t = d.mj({
                        isFinalHarvest:e.opts?.unload
                    }),
                    n = {
                        retry: !e.opts?.unload && t === d.nF,
                        isFinalHarvest: !0===e.opts?.unload
                    },
                    r = this.createPayload(e.endpoint, n);
                return (this.obfuscator.shouldObfuscate() ? this.obfuscateAndSend.bind(this) : this._send.bind(this))({
                    ...e,
                    payload: r,
                    submitMethod: t
                })
            }
            send()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return (this.obfuscator.shouldObfuscate() ? this.obfuscateAndSend.bind(this) : this._send.bind(this))(e)
            }
            obfuscateAndSend()
            {
                var e = this;
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                const {payload: n={}} = t;
                return y(n, (function() {
                    return e.obfuscator.obfuscateString(...arguments)
                }), "string", ["e"]), this._send({
                    ...t,
                    payload: n
                })
            }
            _send(e)
            {
                let {endpoint: t, payload: n={}, opts: r={}, submitMethod: s, cbFinished: a, customUrl: o, raw: c, includeBaseParams: u=!0} = e;
                const l = (0, p.Vp)(this.sharedContext.agentIdentifier);
                if (!l.errorBeacon)
                    return !1;
                const f = (0, p.fr)(this.sharedContext.agentIdentifier);
                let {body: m, qs: v} = this.cleanPayload(n);
                if (0 === Object.keys(m).length && !r?.sendEmptyBody)
                    return a && a({
                        sent: !1
                    }), !1;
                const y = (0, p.D0)(this.sharedContext.agentIdentifier),
                    T = !1 === y.ssl ? "http" : "https",
                    b = y.proxy.beacon || l.errorBeacon,
                    E = "rum" !== t ? "/".concat(t) : "";
                let O = "".concat(T, "://").concat(b).concat(E, "/1/").concat(l.licenseKey);
                o && (O = o),
                c && (O = "".concat(T, "://").concat(b, "/").concat(t));
                const A = !c && u ? this.baseQueryString(v, t) : "";
                let x = h(v, f.maxBytes);
                s || (s = d.mj({
                    isFinalHarvest: r.unload
                })),
                "" === A && x.startsWith("&") && (x = x.substring(1));
                const R = "".concat(O, "?").concat(A).concat(x);
                !!v?.attributes?.includes("gzip") || (m = "events" === t ? m.e : (0, i.A)(m), m.length > 75e4 && 1 === (M[t] = (M?.[t] || 0) + 1) && (0, S.R)(28, t)),
                m && 0 !== m.length && "{}" !== m && "[]" !== m || (m = "");
                const I = [];
                I.push({
                    key: "content-type",
                    value: "text/plain"
                });
                let C = s({
                    url: R,
                    body: m,
                    sync: r.unload && (w.bv || w.lT),
                    headers: I
                });
                if (!r.unload && a && s === d.nF) {
                    const e = this;
                    C.addEventListener("loadend", (function() {
                        const t = {
                            sent: 0 !== this.status,
                            status: this.status,
                            xhr: this,
                            fullUrl: R
                        };
                        429 === this.status ? (t.retry = !0, t.delay = e.tooManyRequestsDelay) : 408 !== this.status && 500 !== this.status && 503 !== this.status || (t.retry = !0),
                        r.needResponse && (t.responseText = this.responseText),
                        a(t)
                    }), (0, g.jT)(!1))
                }
                return (0, p.fr)(this.sharedContext.agentIdentifier).harvestCount++, C
            }
            baseQueryString(e, t)
            {
                const n = (0, p.fr)(this.sharedContext.agentIdentifier),
                    r = (0, p.Vp)(this.sharedContext.agentIdentifier),
                    i = (0, m.L)(f()),
                    s = this.obfuscator.shouldObfuscate() ? this.obfuscator.obfuscateString(i) : i,
                    a = 1===n?.session?.state.sessionReplayMode && "jserrors" !== t,
                    o = ["a=" + r.applicationID, l("sa", r.sa ? "" + r.sa : ""), l("v", b.xv), A(r), l("ct", n.customTransaction), "&rst=" + (0, E.t)(), "&ck=0", "&s=" + (n.session?.state.value || "0"), l("ref", s), l("ptid", n.ptid ? "" + n.ptid : "")];
                return a && o.push(l("hr", "1", e)), o.join("")
            }
            createPayload(e, t)
            {
                const n = this._events[e],
                    r = {
                        body: {},
                        qs: {}
                    };
                if (Array.isArray(n) && n.length > 0)
                    for (let e = 0; e < n.length; e++) {
                        const i = n[e](t);
                        i && (r.body = {
                            ...r.body,
                            ...i.body || {}
                        }, r.qs = {
                            ...r.qs,
                            ...i.qs || {}
                        })
                    }
                return r
            }
            cleanPayload()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                const t = e => "undefined" != typeof Uint8Array && e instanceof Uint8Array || Array.isArray(e) ? e : "string" == typeof e ? e.length > 0 ? e : null : Object.entries(e || {}).reduce(((e, t) => {
                    let [n, r] = t;
                    return ("number" == typeof r || "string" == typeof r && r.length > 0 || "object" == typeof r && Object.keys(r || {}).length > 0) && (e[n] = r), e
                }), {});
                return {
                    body: t(e.body),
                    qs: t(e.qs)
                }
            }
            on(e, t)
            {
                Array.isArray(this._events[e]) || (this._events[e] = []),
                this._events[e].push(t)
            }
        }
        function A(e) {
            return e.transactionName ? l("to", e.transactionName) : l("t", e.tNamePlain || "Unnamed Transaction")
        }
    },
    2838: (e, t, n) => {
        n.d(t, {
            Q: () => a
        });
        var r = n(3878),
            i = n(6154),
            s = n(2843);
        if (i.bv) {
            i.gm.cleanupTasks = [];
            const e = i.gm.close;
            i.gm.close = () => {
                for (let e of i.gm.cleanupTasks)
                    e();
                e()
            }
        }
        function a(e) {
            i.RI ? ((0, s.u)(e, !0), (0, r.sp)("pagehide", e)) : i.bv && i.gm.cleanupTasks.push(e)
        }
    },
    9119: (e, t, n) => {
        n.d(t, {
            L: () => s
        });
        var r = /([^?#]*)[^#]*(#[^?]*|$).*/,
            i = /([^?#]*)().*/;
        function s(e, t) {
            return e.replace(t ? r : i, "$1$2")
        }
    },
    4284: (e, t, n) => {
        n.d(t, {
            p: () => i
        });
        var r = n(6154);
        function i() {
            return Boolean("file:"===r.gm?.location?.protocol)
        }
    },
    4903: (e, t, n) => {
        n.d(t, {
            FL: () => c,
            Q4: () => u,
            WH: () => h
        });
        var r = n(2983),
            i = n(4777),
            s = n(4284),
            a = n(944),
            o = {
                regex: /^file:\/\/(.*)/,
                replacement: atob("ZmlsZTovL09CRlVTQ0FURUQ=")
            };
        class c extends i.J {
            shouldObfuscate()
            {
                return u(this.sharedContext.agentIdentifier).length > 0
            }
            obfuscateString(e)
            {
                if (!e || "string" != typeof e)
                    return e;
                for (var t = u(this.sharedContext.agentIdentifier), n = e, r = 0; r < t.length; r++) {
                    var i = t[r].regex,
                        s = t[r].replacement || "*";
                    n = n.replace(i, s)
                }
                return n
            }
        }
        function u(e) {
            var t = [],
                n = (0, r.gD)(e, "obfuscate") || [];
            return t = t.concat(n), (0, s.p)() && t.push(o), t
        }
        function h(e) {
            for (var t = !1, n = !1, r = 0; r < e.length; r++) {
                "regex" in e[r] ? "string" == typeof e[r].regex || e[r].regex instanceof RegExp || ((0, a.R)(13), n = !0) : ((0, a.R)(12), n = !0);
                var i = e[r].replacement;
                i && "string" != typeof i && ((0, a.R)(14), t = !0)
            }
            return !t && !n
        }
    },
    3304: (e, t, n) => {
        n.d(t, {
            A: () => s
        });
        var r = n(7836);
        const i = () => {
            const e = new WeakSet;
            return (t, n) => {
                if ("object" == typeof n && null !== n) {
                    if (e.has(n))
                        return;
                    e.add(n)
                }
                return n
            }
        };
        function s(e) {
            try {
                return JSON.stringify(e, i())
            } catch (e) {
                try {
                    r.ee.emit("internal-error", [e])
                } catch (e) {}
            }
        }
    },
    9422: (e, t, n) => {
        n.d(t, {
            mj: () => i,
            nF: () => s
        });
        var r = n(6154);
        function i() {
            let {isFinalHarvest: e=!1} = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return e && r.RI && r.Vr ? a : s
        }
        function s(e) {
            let {url: t, body: n=null, sync: r, method: i="POST", headers: s=[{
                key: "content-type",
                value: "text/plain"
            }]} = e;
            const a = new XMLHttpRequest;
            a.open(i, t, !r);
            try {
                "withCredentials" in a && (a.withCredentials = !0)
            } catch (e) {}
            return s.forEach((e => {
                a.setRequestHeader(e.key, e.value)
            })), a.send(n), a
        }
        function a(e) {
            let {url: t, body: n} = e;
            try {
                return window.navigator.sendBeacon.bind(window.navigator)(t, n)
            } catch (e) {
                return !1
            }
        }
    },
    1083: (e, t, n) => {
        n.d(t, {
            w: () => r
        });
        const r = {
            FIRST_PAINT: "fp",
            FIRST_CONTENTFUL_PAINT: "fcp",
            FIRST_INPUT_DELAY: "fi",
            LARGEST_CONTENTFUL_PAINT: "lcp",
            CUMULATIVE_LAYOUT_SHIFT: "cls",
            INTERACTION_TO_NEXT_PAINT: "inp",
            LONG_TASK: "lt",
            TIME_TO_FIRST_BYTE: "ttfb"
        }
    },
    5344: (e, t, n) => {
        n.d(t, {
            j: () => a
        });
        var r = n(7226),
            i = n(6154),
            s = n(1083);
        const a = new (n(6773).x)(s.w.FIRST_CONTENTFUL_PAINT);
        if (i.RI)
            if (i.sb)
                try {
                    if (!i.mw) {
                        performance.getEntriesByType("paint").forEach((e => {
                            "first-contentful-paint" === e.name && a.update({
                                value: Math.floor(e.startTime)
                            })
                        }))
                    }
                } catch (e) {}
            else
                (0, r.zB)((e => {
                    let {value: t, attribution: n} = e;
                    if (i.mw || a.isValid)
                        return;
                    const r = {
                        timeToFirstByte: n.timeToFirstByte,
                        firstByteToFCP: n.firstByteToFCP,
                        loadState: n.loadState
                    };
                    a.update({
                        value: t,
                        attrs: r
                    })
                }))
    },
    5181: (e, t, n) => {
        n.d(t, {
            J: () => s
        });
        var r = n(6154),
            i = n(1083);
        const s = new (n(6773).x)(i.w.FIRST_PAINT);
        if (r.RI) {
            const e = e => {
                e.forEach((e => {
                    "first-paint" !== e.name || s.isValid || (t.disconnect(), s.update({
                        value: e.startTime
                    }))
                }))
            };
            let t;
            try {
                PerformanceObserver.supportedEntryTypes.includes("paint") && !r.mw && (t = new PerformanceObserver((t => {
                    Promise.resolve().then((() => {
                        e(t.getEntries())
                    }))
                })), t.observe({
                    type: "paint",
                    buffered: !0
                }))
            } catch (e) {}
        }
    },
    8779: (e, t, n) => {
        n.d(t, {
            j: () => o
        });
        var r = n(6154),
            i = n(1083),
            s = n(6773),
            a = n(7226);
        const o = new s.x(i.w.TIME_TO_FIRST_BYTE);
        if (r.RI && "undefined" != typeof PerformanceNavigationTiming && !r.OF && window === window.parent)
            (0, a.Ck)((e => {
                let {value: t, attribution: n} = e;
                o.isValid || o.update({
                    value: t,
                    attrs: {
                        navigationEntry: n.navigationEntry
                    }
                })
            }));
        else if (!o.isValid) {
            const e = {};
            for (let t in r.gm?.performance?.timing || {})
                e[t] = Math.max(r.gm?.performance?.timing[t] - r.WN, 0);
            o.update({
                value: e.responseStart,
                attrs: {
                    navigationEntry: e
                }
            })
        }
    },
    6773: (e, t, n) => {
        n.d(t, {
            x: () => r
        });
        class r {
            #e = new Set;
            history = [];
            constructor(e, t)
            {
                this.name = e,
                this.attrs = {},
                this.roundingMethod = "function" == typeof t ? t : Math.floor
            }
            update(e)
            {
                let {value: t, attrs: n={}} = e;
                if (null == t || t < 0)
                    return;
                const r = {
                    value: this.roundingMethod(t),
                    name: this.name,
                    attrs: n
                };
                this.history.push(r),
                this.#e.forEach((e => {
                    try {
                        e(r)
                    } catch (e) {}
                }))
            }
            get current()
            {
                return this.history[this.history.length - 1] || {
                        value: void 0,
                        name: this.name,
                        attrs: {}
                    }
            }
            get isValid()
            {
                return this.current.value >= 0
            }
            subscribe(e)
            {
                let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                if ("function" == typeof e)
                    return this.#e.add(e), this.isValid && t && this.history.forEach((t => {
                        e(t)
                    })), () => {
                        this.#e.delete(e)
                    }
            }
        }
    },
    8351: (e, t, n) => {
        n.r(t),
        n.d(t, {
            Aggregate: () => j
        });
        var r = n(2983),
            i = n(3606),
            s = n(9527),
            a = n(3969),
            o = n(6154);
        const c = "React",
            u = "NextJS",
            h = "Vue",
            l = "NuxtJS",
            d = "Angular",
            f = "AngularUniversal",
            p = "Svelte",
            m = "SvelteKit",
            g = "Preact",
            v = "PreactSSR",
            y = "AngularJS",
            T = "Backbone",
            b = "Ember",
            w = "Meteor",
            S = "Zepto",
            E = "Jquery",
            M = "MooTools",
            O = "Qwik",
            A = "Electron";
        function x() {
            if (!o.RI)
                return [];
            const e = [];
            try {
                (function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "React") || Object.prototype.hasOwnProperty.call(window, "ReactDOM") || Object.prototype.hasOwnProperty.call(window, "ReactRedux") || document.querySelector("[data-reactroot], [data-reactid]") || (() => {
                                const e = document.querySelectorAll("body > div");
                                for (let t = 0; t < e.length; t++)
                                    if (Object.prototype.hasOwnProperty.call(e[t], "_reactRootContainer"))
                                        return !0
                            })()
                    } catch (e) {
                        return !1
                    }
                })() && (e.push(c), function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "next") && Object.prototype.hasOwnProperty.call(window.next, "version")
                    } catch (e) {
                        return !1
                    }
                }() && e.push(u)),
                function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "Vue")
                    } catch (e) {
                        return !1
                    }
                }() && (e.push(h), function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "$nuxt") && Object.prototype.hasOwnProperty.call(window.$nuxt, "nuxt")
                    } catch (e) {
                        return !1
                    }
                }() && e.push(l)),
                function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "ng") || document.querySelector("[ng-version]")
                    } catch (e) {
                        return !1
                    }
                }() && (e.push(d), function() {
                    try {
                        return document.querySelector("[ng-server-context]")
                    } catch (e) {
                        return !1
                    }
                }() && e.push(f)),
                function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "__svelte")
                    } catch (e) {
                        return !1
                    }
                }() && (e.push(p), function() {
                    try {
                        return !!Object.keys(window).find((e => e.startsWith("__sveltekit")))
                    } catch (e) {
                        return !1
                    }
                }() && e.push(m)),
                function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "preact")
                    } catch (e) {
                        return !1
                    }
                }() && (e.push(g), function() {
                    try {
                        return document.querySelector('script[type="__PREACT_CLI_DATA__"]')
                    } catch (e) {
                        return !1
                    }
                }() && e.push(v)),
                function() {
                    try {
                        return Object.prototype.hasOwnProperty.call(window, "angular") || document.querySelector(".ng-binding, [ng-app], [data-ng-app], [ng-controller], [data-ng-controller], [ng-repeat], [data-ng-repeat]") || document.querySelector('script[src*="angular.js"], script[src*="angular.min.js"]')
                    } catch (e) {
                        return !1
                    }
                }() && e.push(y),
                Object.prototype.hasOwnProperty.call(window, "Backbone") && e.push(T),
                Object.prototype.hasOwnProperty.call(window, "Ember") && e.push(b),
                Object.prototype.hasOwnProperty.call(window, "Meteor") && e.push(w),
                Object.prototype.hasOwnProperty.call(window, "Zepto") && e.push(S),
                Object.prototype.hasOwnProperty.call(window, "jQuery") && e.push(E),
                Object.prototype.hasOwnProperty.call(window, "MooTools") && e.push(M),
                Object.prototype.hasOwnProperty.call(window, "qwikevents") && e.push(O),
                function() {
                    try {
                        return "object" == typeof navigator && "string" == typeof navigator.userAgent && navigator.userAgent.indexOf("Electron") >= 0
                    } catch (e) {
                        return !1
                    }
                }() && e.push(A)
            } catch (e) {}
            return e
        }
        var R = n(4284),
            I = n(4903),
            C = n(5289),
            D = n(3878),
            P = n(8985),
            N = n(1687);
        class j extends P.r {
            static featureName = a.TZ;
            constructor(e, t)
            {
                super(e, t, a.TZ),
                this.waitForFlags(["err"]).then((e => {
                    let [t] = e;
                    if (t) {
                        new s.n("jserrors", {
                            onUnload: () => this.unload()
                        }, this).harvest.on("jserrors", (() => ({
                            body: this.aggregator.take(["cm", "sm"])
                        }))),
                        this.drain()
                    } else
                        this.blocked = !0,
                        (0, N.x3)(this.agentIdentifier, this.featureName)
                })),
                (0, i.i)(a.xV, this.storeSupportabilityMetrics.bind(this), this.featureName, this.ee),
                (0, i.i)(a.XG, this.storeEventMetrics.bind(this), this.featureName, this.ee),
                this.singleChecks(),
                this.eachSessionChecks()
            }
            storeSupportabilityMetrics(e, t)
            {
                if (this.blocked)
                    return;
                const n = a.rs,
                    r = {
                        name: e
                    };
                this.aggregator.storeMetric(n, e, r, t)
            }
            storeEventMetrics(e, t)
            {
                if (this.blocked)
                    return;
                const n = a.z_,
                    r = {
                        name: e
                    };
                this.aggregator.store(n, e, r, t)
            }
            singleChecks()
            {
                const {distMethod: e, loaderType: t} = (0, r.fr)(this.agentIdentifier),
                    {proxy: n, privacy: i, page_view_timing: s} = (0, r.D0)(this.agentIdentifier);
                if (t && this.storeSupportabilityMetrics("Generic/LoaderType/".concat(t, "/Detected")), e && this.storeSupportabilityMetrics("Generic/DistMethod/".concat(e, "/Detected")), o.RI) {
                    this.storeSupportabilityMetrics("Generic/Runtime/Browser/Detected");
                    const e=document?.currentScript?.nonce;
                    e && "" !== e && this.storeSupportabilityMetrics("Generic/Runtime/Nonce/Detected"),
                    (0, C.sB)((() => {
                        x().forEach((e => {
                            this.storeSupportabilityMetrics("Framework/" + e + "/Detected")
                        }))
                    })),
                    i.cookies_enabled || this.storeSupportabilityMetrics("Config/SessionTracking/Disabled"),
                    s.long_task && this.storeSupportabilityMetrics("Config/LongTask/Enabled")
                } else
                    o.bv ? this.storeSupportabilityMetrics("Generic/Runtime/Worker/Detected") : this.storeSupportabilityMetrics("Generic/Runtime/Unknown/Detected");
                (0, R.p)() && this.storeSupportabilityMetrics("Generic/FileProtocol/Detected");
                const a = (0, I.Q4)(this.agentIdentifier);
                if (a.length > 0 && this.storeSupportabilityMetrics("Generic/Obfuscate/Detected"), a.length > 0 && !(0, I.WH)(a) && this.storeSupportabilityMetrics("Generic/Obfuscate/Invalid"), n.assets && this.storeSupportabilityMetrics("Config/AssetsUrl/Changed"), n.beacon && this.storeSupportabilityMetrics("Config/BeaconUrl/Changed"), o.RI && window.MutationObserver) {
                    this.storeSupportabilityMetrics("Generic/VideoElement/Added", window.document.querySelectorAll("video").length);
                    new MutationObserver((e => {
                        e.forEach((e => {
                            e.addedNodes.forEach((e => {
                                e instanceof HTMLVideoElement && this.storeSupportabilityMetrics("Generic/VideoElement/Added", 1)
                            }))
                        }))
                    })).observe(window.document.body, {
                        childList: !0,
                        subtree: !0
                    })
                }
            }
            eachSessionChecks()
            {
                o.RI && (0, D.sp)("pageshow", (e => {
                    e?.persisted && this.storeSupportabilityMetrics("Generic/BFCache/PageRestored")
                }))
            }
            unload()
            {
                try {
                    if (this.resourcesSent)
                        return;
                    this.resourcesSent = !0;
                    const e = ["beacon", "fetch", "xmlhttprequest"],
                        t = ["nr-data.net", "newrelic.com", "nr-local.net", "localhost"];
                    function n(t) {
                        return e.includes(t.initiatorType)
                    }
                    if ((performance?.getEntriesByType("resource") || []).forEach((e => {
                        var r;
                        r = e,
                        t.some((e => r.name.indexOf(e) >= 0)) ? n(e) ? this.storeSupportabilityMetrics("Generic/Resources/Ajax/Internal") : this.storeSupportabilityMetrics("Generic/Resources/Non-Ajax/Internal") : n(e) ? this.storeSupportabilityMetrics("Generic/Resources/Ajax/External") : this.storeSupportabilityMetrics("Generic/Resources/Non-Ajax/External")
                    })), "undefined" != typeof performance) {
                        const r = performance.getEntriesByType("mark"),
                            i = performance.getEntriesByType("measure");
                        this.storeSupportabilityMetrics("Generic/Performance/Mark/Seen", r.length),
                        this.storeSupportabilityMetrics("Generic/Performance/Measure/Seen", i.length)
                    }
                } catch (s) {}
            }
        }
    },
    7550: (e, t, n) => {
        n.r(t),
        n.d(t, {
            Aggregate: () => k
        });
        var r = n(6154),
            i = "Start",
            s = "End",
            a = "unloadEvent",
            o = "redirect",
            c = "domainLookup",
            u = "onnect",
            h = "response",
            l = "loadEvent",
            d = "domContentLoadedEvent";
        const f = [];
        function p(e, t) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            if (t)
                return n.of = e, g(n.of, n, "n", !0), g(t[a + i], n, "u", r), g(t[o + i], n, "r", r), g(t[a + s], n, "ue", r), g(t[o + s], n, "re", r), g(t["fetch" + i], n, "f", r), g(t[c + i], n, "dn", r), g(t[c + s], n, "dne", r), g(t["c" + u + i], n, "c", r), g(t["secureC" + u + "ion" + i], n, "s", r), g(t["c" + u + s], n, "ce", r), g(t["request" + i], n, "rq", r), g(t[h + i], n, "rp", r), g(t[h + s], n, "rpe", r), g(t.domLoading, n, "dl", r), g(t.domInteractive, n, "di", r), g(t[d + i], n, "ds", r), g(t[d + s], n, "de", r), g(t.domComplete, n, "dc", r), g(t[l + i], n, "l", r), g(t[l + s], n, "le", r), n
        }
        function m(e, t) {
            var n;
            return g("number" == typeof (n = e.type) ? n : {
                navigate: void 0,
                reload: 1,
                back_forward: 2,
                prerender: 3
            }[n], t, "ty"), g(e.redirectCount, t, "rc"), t
        }
        function g(e, t, n, r) {
            if ("number" == typeof e && e > 0) {
                if (r) {
                    const n = t?.of > 0 ? t.of : 0;
                    e = Math.max(e - n, 0)
                }
                e = Math.round(e),
                t[n] = e,
                f.push(e)
            } else
                f.push(void 0)
        }
        var v = n(3304),
            y = n(2983),
            T = n(7494),
            b = n(6630),
            w = n(860),
            S = n(384);
        function E(e) {
            const t = [],
                n = (0, S.Zm)();
            try {
                Object.keys(n.initializedAgents[e].features).forEach((e => {
                    switch (e) {
                    case w.K.ajax:
                        t.push("xhr");
                        break;
                    case w.K.jserrors:
                        t.push("err");
                        break;
                    case w.K.pageAction:
                        t.push("ins");
                        break;
                    case w.K.sessionTrace:
                        t.push("stn");
                        break;
                    case w.K.softNav:
                    case w.K.spa:
                        t.push("spa")
                    }
                }))
            } catch (e) {}
            return t
        }
        var M = n(5284),
            O = n(944),
            A = n(8985),
            x = n(5344),
            R = n(5181),
            I = n(8779),
            C = n(1687),
            D = n(9908),
            P = n(3969),
            N = n(1863);
        const j = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), ([0-3][0-9]) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ([0-9]{4}) ([01][0-9]|2[0-3])(:[0-5][0-9]){2} GMT$/;
        class F {
            #t;
            #n;
            #r;
            #i = !1;
            constructor(e)
            {
                this.#t=(0, y.fr)(e)?.session,
                this.processStoredDiff()
            }
            get ready()
            {
                return this.#i
            }
            get correctedOriginTime()
            {
                return this.#n
            }
            get localTimeDiff()
            {
                return this.#r
            }
            processRumRequest(e, t, n)
            {
                if (this.processStoredDiff(), this.#i)
                    return;
                const i = e.getResponseHeader("Date");
                if (!i)
                    throw new Error("Missing date header on rum response.");
                if (!j.test(i))
                    throw new Error("Date header invalid format.");
                const s = t + (n - t) / 2;
                if (this.#n = Math.floor(Date.parse(i) - s), this.#r = r.WN - this.#n, isNaN(this.#n))
                    throw new Error("Date header invalid format.");
                this.#t?.write({
                    serverTimeDiff: this.#r
                }),
                this.#i = !0
            }
            convertRelativeTimestamp(e)
            {
                return Math.floor(this.#n + e)
            }
            correctAbsoluteTimestamp(e)
            {
                return Math.floor(e - this.#r)
            }
            processStoredDiff()
            {
                if (this.#i)
                    return;
                const e=this.#t?.read()?.serverTimeDiff;
                "number" != typeof e || isNaN(e) || (this.#r = e, this.#n = r.WN - this.#r, this.#i = !0)
            }
        }
        class k extends A.r {
            static featureName = b.T;
            constructor(e, t)
            {
                if (super(e, t, b.T), this.timeToFirstByte = 0, this.firstByteToWindowLoad = 0, this.firstByteToDomContent = 0, this.timeKeeper = new F(this.agentIdentifier), !(0, y.jD)(e))
                    return this.ee.abort(), (0, O.R)(43);
                r.RI ? I.j.subscribe((e => {
                    let {value: t, attrs: n} = e;
                    const r = n.navigationEntry;
                    this.timeToFirstByte = Math.max(t, this.timeToFirstByte),
                    this.firstByteToWindowLoad = Math.max(Math.round(r.loadEventEnd - this.timeToFirstByte), this.firstByteToWindowLoad),
                    this.firstByteToDomContent = Math.max(Math.round(r.domContentLoadedEventEnd - this.timeToFirstByte), this.firstByteToDomContent),
                    this.sendRum()
                })) : this.sendRum()
            }
            sendRum()
            {
                const e = (0, y.Vp)(this.agentIdentifier),
                    t = (0, y.fr)(this.agentIdentifier),
                    n = new T.M(this);
                e.queueTime && this.aggregator.store("measures", "qt", {
                    value: e.queueTime
                }),
                e.applicationTime && this.aggregator.store("measures", "ap", {
                    value: e.applicationTime
                }),
                this.aggregator.store("measures", "be", {
                    value: this.timeToFirstByte
                }),
                this.aggregator.store("measures", "fe", {
                    value: this.firstByteToWindowLoad
                }),
                this.aggregator.store("measures", "dc", {
                    value: this.firstByteToDomContent
                });
                const i = {
                    tt: e.ttGuid,
                    us: e.user,
                    ac: e.account,
                    pr: e.product,
                    af: E(this.agentIdentifier).join(","),
                    ...Object.entries(this.aggregator.get("measures") || {}).reduce(((e, t) => {
                        let [n, r] = t;
                        return e[n]=r.params?.value, e
                    }), {}),
                    xx: e.extra,
                    ua: e.userAttributes,
                    at: e.atts
                };
                let s;
                if (t.session && (i.fsh = Number(t.session.isNew)), "object" == typeof e.jsAttributes && Object.keys(e.jsAttributes).length > 0 && (s = {
                    ja: e.jsAttributes
                }), r.gm.performance)
                    if ("undefined" != typeof PerformanceNavigationTiming) {
                        const e=r.gm?.performance?.getEntriesByType("navigation")?.[0],
                            t = {
                                timing: p(r.WN, e, {}),
                                navigation: m(e, {})
                            };
                        i.perf = (0, v.A)(t)
                    } else if ("undefined" != typeof PerformanceTiming) {
                        const e = {
                            timing: p(r.WN, r.gm.performance.timing, {}, !0),
                            navigation: m(r.gm.performance.navigation, {})
                        };
                        i.perf = (0, v.A)(e)
                    }
                i.fp = R.J.current.value,
                i.fcp = x.j.current.value,
                this.timeKeeper?.ready && (i.timestamp = this.timeKeeper.convertRelativeTimestamp((0, N.t)()));
                const a = (0, N.t)();
                n.send({
                    endpoint: "rum",
                    payload: {
                        qs: i,
                        body: s
                    },
                    opts: {
                        needResponse: !0,
                        sendEmptyBody: !0
                    },
                    cbFinished: e => {
                        let {status: n, responseText: r, xhr: i} = e;
                        const s = (0, N.t)();
                        if (n >= 400 || 0 === n)
                            this.ee.abort();
                        else {
                            try {
                                if (this.timeKeeper.processRumRequest(i, a, s), !this.timeKeeper.ready)
                                    throw new Error("TimeKeeper not ready");
                                t.timeKeeper = this.timeKeeper,
                                this.timeKeeper.localTimeDiff >= 432e5 ? (0, D.p)(P.xV, ["PVE/NRTime/Calculation/DiffExceed12Hrs"], void 0, w.K.metrics, this.ee) : this.timeKeeper.localTimeDiff >= 216e5 ? (0, D.p)(P.xV, ["PVE/NRTime/Calculation/DiffExceed6Hrs"], void 0, w.K.metrics, this.ee) : this.timeKeeper.localTimeDiff >= 36e5 && (0, D.p)(P.xV, ["PVE/NRTime/Calculation/DiffExceed1Hrs"], void 0, w.K.metrics, this.ee)
                            } catch (e) {
                                return e?.message?.indexOf("invalid format") > 0 ? (0, D.p)(P.xV, ["PVE/NRTime/Calculation/InvalidFormat"], void 0, w.K.metrics, this.ee) : (0, D.p)(P.xV, ["PVE/NRTime/Calculation/Failed"], void 0, w.K.metrics, this.ee), (0, C.Ze)(this.agentIdentifier, w.K.metrics, !0), this.ee.abort(), void (0, O.R)(17, e)
                            }
                            try {
                                const {app: e, ...n} = JSON.parse(r);
                                t.appMetadata = e,
                                (0, M.t)(n, this.agentIdentifier),
                                this.drain()
                            } catch (e) {
                                this.ee.abort(),
                                (0, O.R)(18, e)
                            }
                        }
                    }
                })
            }
        }
    },
    595: (e, t, n) => {
        n.r(t),
        n.d(t, {
            Aggregate: () => N
        });
        var r = n(1478),
            i = n(3304),
            s = n(4903),
            a = Object.prototype.hasOwnProperty;
        function o(e, t) {
            return t ? Math.floor(e).toString(36) : void 0 === e || 0 === e ? "" : Math.floor(e).toString(36)
        }
        function c(e) {
            var t = Object.hasOwnProperty("create") ? Object.create(null) : {},
                n = 0;
            return function(r) {
                if (void 0 === r || "" === r)
                    return "";
                var i = new s.FL({
                    agentIdentifier: e
                });
                r = String(r),
                i.shouldObfuscate() && (r = i.obfuscateString(r));
                return a.call(t, r) ? o(t[r], !0) : (t[r] = n++, function(e) {
                    return "'" + e.replace(h, "\\$1")
                }(r))
            }
        }
        function u(e, t) {
            var n = [];
            return (0, r.$)(e, (function(e, r) {
                if (!(n.length >= 64)) {
                    var s,
                        a = 5;
                    switch (e = t(e), typeof r) {
                    case "object":
                        r ? s = t((0, i.A)(r)) : a = 9;
                        break;
                    case "number":
                        a = 6,
                        s = r % 1 ? r : r + ".";
                        break;
                    case "boolean":
                        a = r ? 7 : 8;
                        break;
                    case "undefined":
                        a = 9;
                        break;
                    default:
                        s = t(r)
                    }
                    n.push([a, e + (s ? "," + s : "")])
                }
            })), n
        }
        var h = /([,\\;])/g;
        var l = n(9527),
            d = n(3606),
            f = n(9908),
            p = n(2983),
            m = n(782),
            g = n(860),
            v = n(8985),
            y = n(7226),
            T = n(1083),
            b = n(6773),
            w = n(6154);
        const S = new b.x(T.w.CUMULATIVE_LAYOUT_SHIFT, (e => e));
        w.RI && (0, y.IN)((e => {
            let {value: t, attribution: n, id: r} = e;
            const i = {
                metricId: r,
                largestShiftTarget: n.largestShiftTarget,
                largestShiftTime: n.largestShiftTime,
                largestShiftValue: n.largestShiftValue,
                loadState: n.loadState
            };
            S.update({
                value: t,
                attrs: i
            })
        }), {
            reportAllChanges: !0
        });
        var E = n(5344);
        const M = new b.x(T.w.FIRST_INPUT_DELAY);
        w.RI && (0, y.lt)((e => {
            let {value: t, attribution: n} = e;
            if (w.mw || M.isValid)
                return;
            const r = {
                type: n.eventType,
                fid: Math.round(t),
                eventTarget: n.eventTarget,
                loadState: n.loadState
            };
            M.update({
                value: n.eventTime,
                attrs: r
            })
        }));
        var O = n(5181);
        const A = new b.x(T.w.INTERACTION_TO_NEXT_PAINT);
        w.RI && (0, y.rH)((e => {
            let {value: t, attribution: n, id: r} = e;
            const i = {
                metricId: r,
                eventTarget: n.eventTarget,
                eventType: n.eventType,
                eventTime: n.eventTime,
                loadState: n.loadState
            };
            A.update({
                value: t,
                attrs: i
            })
        }));
        var x = n(9119);
        const R = new b.x(T.w.LARGEST_CONTENTFUL_PAINT);
        w.RI && (0, y.fK)((e => {
            let t,
                {value: n, attribution: r} = e;
            if (w.mw || R.isValid)
                return;
            const i = r.lcpEntry;
            i && (t = {
                size: i.size,
                eid: i.id,
                element: r.element,
                timeToFirstByte: r.timeToFirstByte,
                resourceLoadDelay: r.resourceLoadDelay,
                resourceLoadTime: r.resourceLoadTime,
                elementRenderDelay: r.elementRenderDelay
            }, r.url && (t.elUrl = (0, x.L)(r.url)), i.element?.tagName && (t.elTag = i.element.tagName)),
            R.update({
                value: n,
                attrs: t
            })
        }));
        var I = n(8779),
            C = n(2838);
        const D = new b.x(T.w.LONG_TASK);
        if (w.RI) {
            const e = e => {
                e.forEach((e => {
                    D.update({
                        value: e.duration,
                        attrs: {
                            ltFrame: e.name,
                            ltStart: e.startTime,
                            ltCtr: e.attribution[0].containerType,
                            ..."window" !== e.attribution[0].containerType && {
                                ltCtrSrc: e.attribution[0].containerSrc,
                                ltCtrId: e.attribution[0].containerId,
                                ltCtrName: e.attribution[0].containerName
                            }
                        }
                    })
                }))
            };
            let t;
            try {
                PerformanceObserver.supportedEntryTypes.includes("longtask") && (t = new PerformanceObserver((t => {
                    Promise.resolve().then((() => {
                        e(t.getEntries())
                    }))
                })), t.observe({
                    type: "longtask",
                    buffered: !0
                }))
            } catch (e) {}
            t && (0, C.Q)((() => {
                e(t.takeRecords())
            }), !0)
        }
        var P = n(2843);
        class N extends v.r {
            static featureName = m.T;
            #s = e => {
                let {name: t, value: n, attrs: r} = e;
                this.addTiming(t, n, r)
            };
            constructor(e, t)
            {
                var n;
                super(e, t, m.T),
                n = this,
                this.timings = [],
                this.timingsSent = [],
                this.curSessEndRecorded = !1,
                !0 === (0, p.gD)(this.agentIdentifier, "page_view_timing.long_task") && D.subscribe(this.#s),
                (0, d.i)("docHidden", (e => this.endCurrentSession(e)), this.featureName, this.ee),
                (0, d.i)("winPagehide", (e => this.recordPageUnload(e)), this.featureName, this.ee);
                const r = (0, p.gD)(this.agentIdentifier, "page_view_timing.harvestTimeSeconds") || 30;
                this.waitForFlags([]).then((() => {
                    O.J.subscribe(this.#s),
                    E.j.subscribe(this.#s),
                    M.subscribe(this.#s),
                    R.subscribe(this.#s),
                    A.subscribe(this.#s),
                    I.j.subscribe((e => {
                        let {attrs: t} = e;
                        this.addTiming("load", Math.round(t.navigationEntry.loadEventEnd))
                    })),
                    (0, P.u)((() => {
                        const {name: e, value: t, attrs: n} = S.current;
                        void 0 !== t && this.addTiming(e, 1e3 * t, n)
                    }), !0);
                    const e = new l.n("events", {
                        onFinished: function() {
                            return n.onHarvestFinished(...arguments)
                        },
                        getPayload: function() {
                            return n.prepareHarvest(...arguments)
                        }
                    }, this);
                    e.startTimer(r),
                    this.drain()
                }))
            }
            endCurrentSession(e)
            {
                this.curSessEndRecorded || (this.addTiming("pageHide", e, null), this.curSessEndRecorded = !0)
            }
            recordPageUnload(e)
            {
                this.addTiming("unload", e, null),
                this.endCurrentSession(e)
            }
            addTiming(e, t, n)
            {
                (function(e) {
                    var t = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
                    if (!t)
                        return;
                    t.type && (e["net-type"] = t.type);
                    t.effectiveType && (e["net-etype"] = t.effectiveType);
                    t.rtt && (e["net-rtt"] = t.rtt);
                    t.downlink && (e["net-dlink"] = t.downlink)
                })(n = n || {}),
                e !== T.w.CUMULATIVE_LAYOUT_SHIFT && S.current.value >= 0 && (n.cls = S.current.value),
                this.timings.push({
                    name: e,
                    value: t,
                    attrs: n
                }),
                (0, f.p)("pvtAdded", [e, t, n], void 0, g.K.sessionTrace, this.ee)
            }
            onHarvestFinished(e)
            {
                e.retry && this.timingsSent.length > 0 && (this.timings.unshift(...this.timingsSent), this.timingsSent = [])
            }
            appendGlobalCustomAttributes(e)
            {
                var t = e.attrs || {},
                    n = (0, p.Vp)(this.agentIdentifier).jsAttributes || {},
                    i = ["size", "eid", "cls", "type", "fid", "elTag", "elUrl", "net-type", "net-etype", "net-rtt", "net-dlink"];
                (0, r.$)(n, (function(e, n) {
                    i.indexOf(e) < 0 && (t[e] = n)
                }))
            }
            prepareHarvest(e)
            {
                if (0 !== this.timings.length) {
                    var t = this.getPayload(this.timings);
                    if (e.retry)
                        for (var n = 0; n < this.timings.length; n++)
                            this.timingsSent.push(this.timings[n]);
                    return this.timings = [], {
                        body: {
                            e: t
                        }
                    }
                }
            }
            getPayload(e)
            {
                for (var t, n, r, i = c(this.agentIdentifier), s = "bel.6;", a = 0; a < e.length; a++) {
                    var h = e[a];
                    s += "e,",
                    s += i(h.name) + ",",
                    s += (t = h.value, n = o, r = !1, (t || 0 === t || "" === t ? n(t) + (r ? "," : "") : "!") + ","),
                    this.appendGlobalCustomAttributes(h);
                    var l = u(h.attrs, i);
                    l && l.length > 0 && (s += o(l.length) + ";" + l.join(";")),
                    a + 1 < e.length && (s += ";")
                }
                return s
            }
        }
    },
    2987: (e, t, n) => {
        n.d(t, {
            setupAgentSession: () => j
        });
        var r = n(2983),
            i = n(1687),
            s = n(7836),
            a = n(3606),
            o = n(9566),
            c = n(944),
            u = n(3304);
        class h {
            constructor(e, t)
            {
                if (!e.onEnd)
                    throw new Error("onEnd handler is required");
                if (!t)
                    throw new Error("ms duration is required");
                this.onEnd = e.onEnd,
                this.initialMs = t,
                this.startTimestamp = Date.now(),
                this.timer = this.create(this.onEnd, t)
            }
            create(e, t)
            {
                return this.timer && this.clear(), setTimeout((() => e ? e() : this.onEnd()), t || this.initialMs)
            }
            clear()
            {
                clearTimeout(this.timer),
                this.timer = null
            }
            end()
            {
                this.clear(),
                this.onEnd()
            }
            isValid()
            {
                return this.initialMs - (Date.now() - this.startTimestamp) > 0
            }
        }
        var l = n(6154),
            d = n(2614),
            f = n(2843),
            p = n(6389);
        class m extends h {
            constructor(e, t)
            {
                super(e, t),
                this.onPause = "function" == typeof e.onPause ? e.onPause : () => {},
                this.onRefresh = "function" == typeof e.onRefresh ? e.onRefresh : () => {},
                this.onResume = "function" == typeof e.onResume ? e.onResume : () => {},
                this.readStorage = e.readStorage,
                this.remainingMs = void 0,
                e.refreshEvents || (e.refreshEvents = ["click", "keydown", "scroll"]);
                try {
                    this.abortController = new AbortController
                } catch (e) {}
                if (l.RI && e.ee) {
                    if (e.ee) {
                        this.ee = e.ee;
                        const t = (0, p.s)(this.refresh.bind(this), 500, {
                            leading: !0
                        });
                        this.refreshHandler = n => {
                            e.refreshEvents.includes(n?.[0]?.type) && t()
                        },
                        e.ee.on("fn-end", this.refreshHandler)
                    }
                    (0, f.u)((e => {
                        "hidden" === e ? this.pause() : this.resume()
                    }), !1, !1,this.abortController?.signal)
                }
            }
            abort()
            {
                this.clear(), this.abortController?.abort(),
                this.refreshHandler && (this.ee.removeEventListener("fn-end", this.refreshHandler), this.refreshHandler = this.ee = null)
            }
            pause()
            {
                this.onPause(),
                clearTimeout(this.timer),
                this.remainingMs = this.initialMs - (Date.now() - this.startTimestamp)
            }
            resume()
            {
                try {
                    const t = this.readStorage(),
                        n = "string" == typeof t ? JSON.parse(t) : t;
                    e(n.expiresAt) || e(n.inactiveAt) ? this.end() : (this.refresh(), this.onResume())
                } catch (e) {
                    this.end()
                }
                function e(e) {
                    return Date.now() > e
                }
            }
            refresh(e, t)
            {
                this.clear(),
                this.timer = this.create(e, t),
                this.startTimestamp = Date.now(),
                this.remainingMs = void 0,
                this.onRefresh()
            }
        }
        var g = n(3434),
            v = n(8990);
        const y = {},
            T = l.gm.XMLHttpRequest,
            b = "addEventListener",
            w = "removeEventListener",
            S = "nr@wrapped:".concat(s.P);
        function E(e) {
            var t = function(e) {
                return (e || s.ee).get("events")
            }(e);
            if (y[t.debugId]++)
                return t;
            y[t.debugId] = 1;
            var n = (0, g.YM)(t, !0);
            function r(e) {
                n.inPlace(e, [b, w], "-", i)
            }
            function i(e, t) {
                return e[1]
            }
            return "getPrototypeOf" in Object && (l.RI && M(document, r), M(l.gm, r), M(T.prototype, r)), t.on(b + "-start", (function(e, t) {
                var r = e[1];
                if (null !== r && ("function" == typeof r || "object" == typeof r)) {
                    var i = (0, v.I)(r, S, (function() {
                        var e = {
                            object: function() {
                                if ("function" != typeof r.handleEvent)
                                    return;
                                return r.handleEvent.apply(r, arguments)
                            },
                            function: r
                        }[typeof r];
                        return e ? n(e, "fn-", null, e.name || "anonymous") : r
                    }));
                    this.wrapped = e[1] = i
                }
            })), t.on(w + "-start", (function(e) {
                e[1] = this.wrapped || e[1]
            })), t
        }
        function M(e, t) {
            let n = e;
            for (; "object" == typeof n && !Object.prototype.hasOwnProperty.call(n, b);)
                n = Object.getPrototypeOf(n);
            for (var r = arguments.length, i = new Array(r > 2 ? r - 2 : 0), s = 2; s < r; s++)
                i[s - 2] = arguments[s];
            n && t(n, ...i)
        }
        l.gm.Request,
        l.gm.Response;
        var O = n(3878);
        var A = n(7864),
            x = n(9908),
            R = n(3969),
            I = n(860);
        const C = {
            value: "",
            inactiveAt: 0,
            expiresAt: 0,
            updatedAt: Date.now(),
            sessionReplayMode: d.g.OFF,
            sessionReplaySentFirstChunk: !1,
            sessionTraceMode: d.g.OFF,
            traceHarvestStarted: !1,
            serverTimeDiff: null,
            custom: {}
        };
        class D {
            constructor(e)
            {
                const {agentIdentifier: t, key: n, storage: r} = e;
                if (!t || !n || !r)
                    throw new Error("Missing required field(s):".concat(t ? "" : " agentID").concat(n ? "" : " key").concat(r ? "" : " storage"));
                this.agentIdentifier = t,
                this.storage = r,
                this.state = {},
                this.key = n,
                this.ee = s.ee.get(t),
                E(this.ee),
                this.setup(e),
                l.RI && !l.lT && (0, O.sp)("storage", (e => {
                    if (e.key === this.lookupKey) {
                        const t = "string" == typeof e.newValue ? JSON.parse(e.newValue) : e.newValue;
                        this.sync(t),
                        this.ee.emit(d.tS.UPDATE, [d.iL.CROSS_TAB, this.state])
                    }
                }))
            }
            setup(e)
            {
                let {value: t=(0, o.LA)(16), expiresMs: n=d.wk, inactiveMs: r=d.BB} = e;
                const i = {
                    serverTimeDiff: this.state.serverTimeDiff || C.serverTimeDiff
                };
                this.state = {},
                this.sync({
                    ...C,
                    ...i
                }),
                this.state.value = t,
                this.expiresMs = n,
                this.inactiveMs = r;
                const s = this.read();
                n ? (this.state.expiresAt = s?.expiresAt || this.getFutureTimestamp(n), this.expiresTimer = new h({
                    onEnd: () => {
                        this.collectSM("expired"),
                        this.collectSM("duration"),
                        this.reset()
                    }
                }, this.state.expiresAt - Date.now())) : this.state.expiresAt = 1 / 0,
                r ? (this.state.inactiveAt = s?.inactiveAt || this.getFutureTimestamp(r), this.inactiveTimer = new m({
                    onEnd: () => {
                        this.collectSM("inactive"),
                        this.collectSM("duration"),
                        this.reset()
                    },
                    onRefresh: this.refresh.bind(this),
                    onResume: () => {
                        this.ee.emit(d.tS.RESUME)
                    },
                    onPause: () => {
                        this.initialized && this.ee.emit(d.tS.PAUSE),
                        this.write((0, A.a)(this.state, C))
                    },
                    ee: this.ee,
                    refreshEvents: ["click", "keydown", "scroll"],
                    readStorage: () => this.storage.get(this.lookupKey)
                }, this.state.inactiveAt - Date.now())) : this.state.inactiveAt = 1 / 0,
                this.isNew ||= !Object.keys(s).length,
                this.isNew ? this.write((0, A.a)(this.state, C), !0) : this.sync(s),
                this.initialized = !0,
                this.ee.emit(d.tS.STARTED, [this.isNew])
            }
            get lookupKey()
            {
                return "".concat(d.H3, "_").concat(this.key)
            }
            sync(e)
            {
                Object.assign(this.state, e)
            }
            read()
            {
                try {
                    const e = this.storage.get(this.lookupKey);
                    if (!e)
                        return {};
                    const t = "string" == typeof e ? JSON.parse(e) : e;
                    return this.isInvalid(t) ? {} : this.isExpired(t.expiresAt) ? (this.collectSM("expired"), this.collectSM("duration", t, !0), this.reset()) : this.isExpired(t.inactiveAt) ? (this.collectSM("inactive"), this.collectSM("duration", t, !0), this.reset()) : t
                } catch (e) {
                    return (0, c.R)(10, e), {}
                }
            }
            write(e)
            {
                try {
                    if (!e || "object" != typeof e)
                        return;
                    return e.updatedAt = Date.now(), this.sync(e), this.storage.set(this.lookupKey, (0, u.A)(this.state)), this.ee.emit(d.tS.UPDATE, [d.iL.SAME_TAB, this.state]), e
                } catch (e) {
                    return (0, c.R)(11, e), null
                }
            }
            reset()
            {
                try {
                    return this.initialized && this.ee.emit(d.tS.RESET), this.storage.remove(this.lookupKey), this.inactiveTimer?.abort?.(), this.expiresTimer?.clear?.(), delete this.isNew, this.setup({
                        agentIdentifier: this.agentIdentifier,
                        key: this.key,
                        storage: this.storage,
                        expiresMs: this.expiresMs,
                        inactiveMs: this.inactiveMs
                    }), this.read()
                } catch (e) {
                    return {}
                }
            }
            refresh()
            {
                const e = this.read();
                this.write({
                    ...e,
                    inactiveAt: this.getFutureTimestamp(this.inactiveMs)
                })
            }
            isExpired(e)
            {
                return Date.now() > e
            }
            isInvalid(e)
            {
                return !Object.keys(C).every((t => Object.keys(e).includes(t)))
            }
            collectSM(e, t, n)
            {
                let r,
                    i;
                "duration" === e && (r = this.getDuration(t, n), i = "Session/Duration/Ms"),
                "expired" === e && (i = "Session/Expired/Seen"),
                "inactive" === e && (i = "Session/Inactive/Seen"),
                i && (0, x.p)(R.xV, [i, r], void 0, I.K.metrics, this.ee)
            }
            getDuration()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.state,
                    t = arguments.length > 1 ? arguments[1] : void 0;
                const n = e.expiresAt - this.expiresMs;
                return (t ? Date.now() : e.updatedAt) - n
            }
            getFutureTimestamp(e)
            {
                return Date.now() + e
            }
            syncCustomAttribute(e, t)
            {
                if (l.RI)
                    if (null === t) {
                        const t = this.read();
                        t.custom && (delete t.custom[e], this.write({
                            ...t
                        }))
                    } else {
                        const n = this.read();
                        this.custom = {
                            ...n?.custom || {},
                            [e]: t
                        },
                        this.write({
                            ...n,
                            custom: this.custom
                        })
                    }
            }
        }
        class P {
            get(e)
            {
                try {
                    return localStorage.getItem(e) || void 0
                } catch (e) {
                    return ""
                }
            }
            set(e, t)
            {
                try {
                    return null == t ? this.remove(e) : localStorage.setItem(e, t)
                } catch (e) {}
            }
            remove(e)
            {
                try {
                    localStorage.removeItem(e)
                } catch (e) {}
            }
        }
        let N = 0;
        function j(e) {
            const t = (0, r.fr)(e);
            if (N++)
                return t.session;
            const n = (0, r.D0)(e).session;
            t.session = new D({
                agentIdentifier: e,
                key: d.uh,
                storage: new P,
                expiresMs:n?.expiresMs,
                inactiveMs:n?.inactiveMs
            });
            const o = t.session.state.custom,
                c = (0, r.Vp)(e);
            o && (c.jsAttributes = {
                ...c.jsAttributes,
                ...o
            });
            const u = s.ee.get(e);
            return (0, a.i)("api-setCustomAttribute", ((e, n, r) => {
                t.session.syncCustomAttribute(n, r)
            }), "session", u), (0, a.i)("api-setUserId", ((e, n, r) => {
                t.session.syncCustomAttribute(n, r)
            }), "session", u), (0, i.Ze)(e, "session"), t.session
        }
    },
    8985: (e, t, n) => {
        n.d(t, {
            r: () => u
        });
        var r = n(4234),
            i = n(2983),
            s = n(2266),
            a = n(384),
            o = n(1687),
            c = n(5284);
        class u extends r.W {
            constructor()
            {
                super(...arguments),
                this.checkConfiguration()
            }
            waitForFlags()
            {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                const t = new Promise(((t, n) => {
                    function r(t) {
                        return e.map((e => t[e] ? t[e] : 0))
                    }
                    c.B[this.agentIdentifier] ? t(r(c.B[this.agentIdentifier])) : this.ee.on("rumresp", (function() {
                        t(r(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}))
                    }))
                }));
                return t.catch((e => {
                    this.ee.emit("internal-error", [e])
                }))
            }
            drain()
            {
                (0, o.Ze)(this.agentIdentifier, this.featureName),
                this.drained = !0
            }
            checkConfiguration()
            {
                if (!(0, i.jD)(this.agentIdentifier)) {
                    const e = (0, a.pV)();
                    let t = {
                        ...e.info?.jsAttributes
                    };
                    try {
                        t = {
                            ...t,
                            ...(0, i.Vp)(this.agentIdentifier)?.jsAttributes
                        }
                    } catch (e) {}
                    (0, s.j)({
                        agentIdentifier: this.agentIdentifier
                    }, {
                        ...e,
                        info: {
                            ...e.info,
                            jsAttributes: t
                        },
                        runtime: (0, i.fr)(this.agentIdentifier)
                    })
                }
            }
        }
    },
    6103: (e, t, n) => {
        n.d(t, {
            lazyFeatureLoader: () => i
        });
        var r = n(860);
        function i(e, t) {
            if ("aggregate" === t)
                switch (e) {
                case r.K.ajax:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../ajax/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.jserrors:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../jserrors/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.logging:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../logging/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.metrics:
                    return n.e(296).then(n.bind(n, 8351));
                case r.K.pageAction:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../page_action/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.pageViewEvent:
                    return n.e(296).then(n.bind(n, 7550));
                case r.K.pageViewTiming:
                    return n.e(296).then(n.bind(n, 595));
                case r.K.sessionReplay:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../session_replay/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.sessionTrace:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../session_trace/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.spa:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../spa/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                case r.K.softNav:
                    return Promise.resolve().then((function() {
                        var e = new Error("Cannot find module '../soft_navigations/aggregate'");
                        throw e.code = "MODULE_NOT_FOUND", e
                    }));
                default:
                    throw new Error("Attempted to load unsupported agent feature: ".concat(e, " ").concat(t))
                }
        }
    },
    8778: (e, t, n) => {
        n.r(t),
        n.d(t, {
            setAPI: () => l
        });
        var r = n(860),
            i = n(2983),
            s = n(7836),
            a = n(9908),
            o = n(3606),
            c = n(6389),
            u = n(3969),
            h = n(6154);
        function l(e) {
            var t = s.ee.get(e),
                n = {
                    finished: (0, c.J)((function(e, n) {
                        var i = n ? n - h.WN : e;
                        (0, a.p)(u.XG, ["finished", {
                            time: i
                        }], void 0, r.K.metrics, t),
                        l(e, {
                            name: "finished",
                            start: i + h.WN,
                            origin: "nr"
                        }),
                        (0, a.p)("api-addPageAction", [i, "finished"], void 0, r.K.pageAction, t)
                    })),
                    setErrorHandler: function(t, n) {
                        (0, i.fr)(e).onerror = n
                    },
                    addToTrace: l,
                    addRelease: function(t, n, r) {
                        if (++d > 10)
                            return;
                        (0, i.fr)(e).releaseIds[n.slice(-200)] = ("" + r).slice(-200)
                    }
                };
            function l(e, n) {
                if (n && "object" == typeof n && n.name && n.start) {
                    var i = {
                        n: n.name,
                        s: n.start - h.WN,
                        e: (n.end || n.start) - h.WN,
                        o: n.origin || "",
                        t: "api"
                    };
                    (0, a.p)("bstApi", [i], void 0, r.K.sessionTrace, t)
                }
            }
            Object.entries(n).forEach((e => {
                let [n, r] = e;
                return (0, o.i)("api-" + n, r, "api", t)
            }));
            var d = 0
        }
    },
    7226: (e, t, n) => {
        n.d(t, {
            Ck: () => ce,
            IN: () => P,
            fK: () => ie,
            lt: () => V,
            rH: () => $,
            zB: () => N
        });
        var r,
            i,
            s,
            a,
            o,
            c = function() {
                return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0]
            },
            u = function(e) {
                if ("loading" === document.readyState)
                    return "loading";
                var t = c();
                if (t) {
                    if (e < t.domInteractive)
                        return "loading";
                    if (0 === t.domContentLoadedEventStart || e < t.domContentLoadedEventStart)
                        return "dom-interactive";
                    if (0 === t.domComplete || e < t.domComplete)
                        return "dom-content-loaded"
                }
                return "complete"
            },
            h = function(e) {
                var t = e.nodeName;
                return 1 === e.nodeType ? t.toLowerCase() : t.toUpperCase().replace(/^#/, "")
            },
            l = function(e, t) {
                var n = "";
                try {
                    for (; e && 9 !== e.nodeType;) {
                        var r = e,
                            i = r.id ? "#" + r.id : h(r) + (r.classList && r.classList.value && r.classList.value.trim() && r.classList.value.trim().length ? "." + r.classList.value.trim().replace(/\s+/g, ".") : "");
                        if (n.length + i.length > (t || 100) - 1)
                            return n || i;
                        if (n = n ? i + ">" + n : i, r.id)
                            break;
                        e = r.parentNode
                    }
                } catch (e) {}
                return n
            },
            d = -1,
            f = function() {
                return d
            },
            p = function(e) {
                addEventListener("pageshow", (function(t) {
                    t.persisted && (d = t.timeStamp, e(t))
                }), !0)
            },
            m = function() {
                var e = c();
                return e && e.activationStart || 0
            },
            g = function(e, t) {
                var n = c(),
                    r = "navigate";
                return f() >= 0 ? r = "back-forward-cache" : n && (document.prerendering || m() > 0 ? r = "prerender" : document.wasDiscarded ? r = "restore" : n.type && (r = n.type.replace(/_/g, "-"))), {
                    name: e,
                    value: void 0 === t ? -1 : t,
                    rating: "good",
                    delta: 0,
                    entries: [],
                    id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12),
                    navigationType: r
                }
            },
            v = function(e, t, n) {
                try {
                    if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                        var r = new PerformanceObserver((function(e) {
                            Promise.resolve().then((function() {
                                t(e.getEntries())
                            }))
                        }));
                        return r.observe(Object.assign({
                            type: e,
                            buffered: !0
                        }, n || {})), r
                    }
                } catch (e) {}
            },
            y = function(e, t, n, r) {
                var i,
                    s;
                return function(a) {
                    t.value >= 0 && (a || r) && ((s = t.value - (i || 0)) || void 0 === i) && (i = t.value, t.delta = s, t.rating = function(e, t) {
                        return e > t[1] ? "poor" : e > t[0] ? "needs-improvement" : "good"
                    }(t.value, n), e(t))
                }
            },
            T = function(e) {
                requestAnimationFrame((function() {
                    return requestAnimationFrame((function() {
                        return e()
                    }))
                }))
            },
            b = function(e) {
                var t = function(t) {
                    "pagehide" !== t.type && "hidden" !== document.visibilityState || e(t)
                };
                addEventListener("visibilitychange", t, !0),
                addEventListener("pagehide", t, !0)
            },
            w = function(e) {
                var t = !1;
                return function(n) {
                    t || (e(n), t = !0)
                }
            },
            S = -1,
            E = function() {
                return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0
            },
            M = function(e) {
                "hidden" === document.visibilityState && S > -1 && (S = "visibilitychange" === e.type ? e.timeStamp : 0, A())
            },
            O = function() {
                addEventListener("visibilitychange", M, !0),
                addEventListener("prerenderingchange", M, !0)
            },
            A = function() {
                removeEventListener("visibilitychange", M, !0),
                removeEventListener("prerenderingchange", M, !0)
            },
            x = function() {
                return S < 0 && (S = E(), O(), p((function() {
                    setTimeout((function() {
                        S = E(),
                        O()
                    }), 0)
                }))), {
                    get firstHiddenTime() {
                        return S
                    }
                }
            },
            R = function(e) {
                document.prerendering ? addEventListener("prerenderingchange", (function() {
                    return e()
                }), !0) : e()
            },
            I = [1800, 3e3],
            C = function(e, t) {
                t = t || {},
                R((function() {
                    var n,
                        r = x(),
                        i = g("FCP"),
                        s = v("paint", (function(e) {
                            e.forEach((function(e) {
                                "first-contentful-paint" === e.name && (s.disconnect(), e.startTime < r.firstHiddenTime && (i.value = Math.max(e.startTime - m(), 0), i.entries.push(e), n(!0)))
                            }))
                        }));
                    s && (n = y(e, i, I, t.reportAllChanges), p((function(r) {
                        i = g("FCP"),
                        n = y(e, i, I, t.reportAllChanges),
                        T((function() {
                            i.value = performance.now() - r.timeStamp,
                            n(!0)
                        }))
                    })))
                }))
            },
            D = [.1, .25],
            P = function(e, t) {
                !function(e, t) {
                    t = t || {},
                    C(w((function() {
                        var n,
                            r = g("CLS", 0),
                            i = 0,
                            s = [],
                            a = function(e) {
                                e.forEach((function(e) {
                                    if (!e.hadRecentInput) {
                                        var t = s[0],
                                            n = s[s.length - 1];
                                        i && e.startTime - n.startTime < 1e3 && e.startTime - t.startTime < 5e3 ? (i += e.value, s.push(e)) : (i = e.value, s = [e])
                                    }
                                })),
                                i > r.value && (r.value = i, r.entries = s, n())
                            },
                            o = v("layout-shift", a);
                        o && (n = y(e, r, D, t.reportAllChanges), b((function() {
                            a(o.takeRecords()),
                            n(!0)
                        })), p((function() {
                            i = 0,
                            r = g("CLS", 0),
                            n = y(e, r, D, t.reportAllChanges),
                            T((function() {
                                return n()
                            }))
                        })), setTimeout(n, 0))
                    })))
                }((function(t) {
                    !function(e) {
                        if (e.entries.length) {
                            var t = e.entries.reduce((function(e, t) {
                                return e && e.value > t.value ? e : t
                            }));
                            if (t && t.sources && t.sources.length) {
                                var n = (r = t.sources).find((function(e) {
                                    return e.node && 1 === e.node.nodeType
                                })) || r[0];
                                if (n)
                                    return void (e.attribution = {
                                        largestShiftTarget: l(n.node),
                                        largestShiftTime: t.startTime,
                                        largestShiftValue: t.value,
                                        largestShiftSource: n,
                                        largestShiftEntry: t,
                                        loadState: u(t.startTime)
                                    })
                            }
                        }
                        var r;
                        e.attribution = {}
                    }(t),
                    e(t)
                }), t)
            },
            N = function(e, t) {
                C((function(t) {
                    !function(e) {
                        if (e.entries.length) {
                            var t = c(),
                                n = e.entries[e.entries.length - 1];
                            if (t) {
                                var r = t.activationStart || 0,
                                    i = Math.max(0, t.responseStart - r);
                                return void (e.attribution = {
                                    timeToFirstByte: i,
                                    firstByteToFCP: e.value - i,
                                    loadState: u(e.entries[0].startTime),
                                    navigationEntry: t,
                                    fcpEntry: n
                                })
                            }
                        }
                        e.attribution = {
                            timeToFirstByte: 0,
                            firstByteToFCP: e.value,
                            loadState: u(f())
                        }
                    }(t),
                    e(t)
                }), t)
            },
            j = {
                passive: !0,
                capture: !0
            },
            F = new Date,
            k = function(e, t) {
                r || (r = t, i = e, s = new Date, B(removeEventListener), L())
            },
            L = function() {
                if (i >= 0 && i < s - F) {
                    var e = {
                        entryType: "first-input",
                        name: r.type,
                        target: r.target,
                        cancelable: r.cancelable,
                        startTime: r.timeStamp,
                        processingStart: r.timeStamp + i
                    };
                    a.forEach((function(t) {
                        t(e)
                    })),
                    a = []
                }
            },
            _ = function(e) {
                if (e.cancelable) {
                    var t = (e.timeStamp > 1e12 ? new Date : performance.now()) - e.timeStamp;
                    "pointerdown" == e.type ? function(e, t) {
                        var n = function() {
                                k(e, t),
                                i()
                            },
                            r = function() {
                                i()
                            },
                            i = function() {
                                removeEventListener("pointerup", n, j),
                                removeEventListener("pointercancel", r, j)
                            };
                        addEventListener("pointerup", n, j),
                        addEventListener("pointercancel", r, j)
                    }(t, e) : k(t, e)
                }
            },
            B = function(e) {
                ["mousedown", "keydown", "touchstart", "pointerdown"].forEach((function(t) {
                    return e(t, _, j)
                }))
            },
            H = [100, 300],
            U = function(e, t) {
                t = t || {},
                R((function() {
                    var n,
                        s = x(),
                        o = g("FID"),
                        c = function(e) {
                            e.startTime < s.firstHiddenTime && (o.value = e.processingStart - e.startTime, o.entries.push(e), n(!0))
                        },
                        u = function(e) {
                            e.forEach(c)
                        },
                        h = v("first-input", u);
                    n = y(e, o, H, t.reportAllChanges),
                    h && b(w((function() {
                        u(h.takeRecords()),
                        h.disconnect()
                    }))),
                    h && p((function() {
                        var s;
                        o = g("FID"),
                        n = y(e, o, H, t.reportAllChanges),
                        a = [],
                        i = -1,
                        r = null,
                        B(addEventListener),
                        s = c,
                        a.push(s),
                        L()
                    }))
                }))
            },
            V = function(e, t) {
                U((function(t) {
                    !function(e) {
                        var t = e.entries[0];
                        e.attribution = {
                            eventTarget: l(t.target),
                            eventType: t.name,
                            eventTime: t.startTime,
                            eventEntry: t,
                            loadState: u(t.startTime)
                        }
                    }(t),
                    e(t)
                }), t)
            },
            K = 0,
            q = 1 / 0,
            G = 0,
            W = function(e) {
                e.forEach((function(e) {
                    e.interactionId && (q = Math.min(q, e.interactionId), G = Math.max(G, e.interactionId), K = G ? (G - q) / 7 + 1 : 0)
                }))
            },
            J = function() {
                return o ? K : performance.interactionCount || 0
            },
            z = function() {
                "interactionCount" in performance || o || (o = v("event", W, {
                    type: "event",
                    buffered: !0,
                    durationThreshold: 0
                }))
            },
            Q = [200, 500],
            Z = 0,
            X = function() {
                return J() - Z
            },
            Y = [],
            ee = {},
            te = function(e) {
                var t = Y[Y.length - 1],
                    n = ee[e.interactionId];
                if (n || Y.length < 10 || e.duration > t.latency) {
                    if (n)
                        n.entries.push(e),
                        n.latency = Math.max(n.latency, e.duration);
                    else {
                        var r = {
                            id: e.interactionId,
                            latency: e.duration,
                            entries: [e]
                        };
                        ee[r.id] = r,
                        Y.push(r)
                    }
                    Y.sort((function(e, t) {
                        return t.latency - e.latency
                    })),
                    Y.splice(10).forEach((function(e) {
                        delete ee[e.id]
                    }))
                }
            },
            $ = function(e, t) {
                !function(e, t) {
                    t = t || {},
                    R((function() {
                        var n;
                        z();
                        var r,
                            i = g("INP"),
                            s = function(e) {
                                e.forEach((function(e) {
                                    e.interactionId && te(e),
                                    "first-input" === e.entryType && !Y.some((function(t) {
                                        return t.entries.some((function(t) {
                                            return e.duration === t.duration && e.startTime === t.startTime
                                        }))
                                    })) && te(e)
                                }));
                                var t,
                                    n = (t = Math.min(Y.length - 1, Math.floor(X() / 50)), Y[t]);
                                n && n.latency !== i.value && (i.value = n.latency, i.entries = n.entries, r())
                            },
                            a = v("event", s, {
                                durationThreshold: null !== (n = t.durationThreshold) && void 0 !== n ? n : 40
                            });
                        r = y(e, i, Q, t.reportAllChanges),
                        a && ("PerformanceEventTiming" in window && "interactionId" in PerformanceEventTiming.prototype && a.observe({
                            type: "first-input",
                            buffered: !0
                        }), b((function() {
                            s(a.takeRecords()),
                            i.value < 0 && X() > 0 && (i.value = 0, i.entries = []),
                            r(!0)
                        })), p((function() {
                            Y = [],
                            Z = J(),
                            i = g("INP"),
                            r = y(e, i, Q, t.reportAllChanges)
                        })))
                    }))
                }((function(t) {
                    !function(e) {
                        if (e.entries.length) {
                            var t = e.entries.sort((function(e, t) {
                                    return t.duration - e.duration || t.processingEnd - t.processingStart - (e.processingEnd - e.processingStart)
                                }))[0],
                                n = e.entries.find((function(e) {
                                    return e.target
                                }));
                            e.attribution = {
                                eventTarget: l(n && n.target),
                                eventType: t.name,
                                eventTime: t.startTime,
                                eventEntry: t,
                                loadState: u(t.startTime)
                            }
                        } else
                            e.attribution = {}
                    }(t),
                    e(t)
                }), t)
            },
            ne = [2500, 4e3],
            re = {},
            ie = function(e, t) {
                !function(e, t) {
                    t = t || {},
                    R((function() {
                        var n,
                            r = x(),
                            i = g("LCP"),
                            s = function(e) {
                                var t = e[e.length - 1];
                                t && t.startTime < r.firstHiddenTime && (i.value = Math.max(t.startTime - m(), 0), i.entries = [t], n())
                            },
                            a = v("largest-contentful-paint", s);
                        if (a) {
                            n = y(e, i, ne, t.reportAllChanges);
                            var o = w((function() {
                                re[i.id] || (s(a.takeRecords()), a.disconnect(), re[i.id] = !0, n(!0))
                            }));
                            ["keydown", "click"].forEach((function(e) {
                                addEventListener(e, (function() {
                                    return setTimeout(o, 0)
                                }), !0)
                            })),
                            b(o),
                            p((function(r) {
                                i = g("LCP"),
                                n = y(e, i, ne, t.reportAllChanges),
                                T((function() {
                                    i.value = performance.now() - r.timeStamp,
                                    re[i.id] = !0,
                                    n(!0)
                                }))
                            }))
                        }
                    }))
                }((function(t) {
                    !function(e) {
                        if (e.entries.length) {
                            var t = c();
                            if (t) {
                                var n = t.activationStart || 0,
                                    r = e.entries[e.entries.length - 1],
                                    i = r.url && performance.getEntriesByType("resource").filter((function(e) {
                                        return e.name === r.url
                                    }))[0],
                                    s = Math.max(0, t.responseStart - n),
                                    a = Math.max(s, i ? (i.requestStart || i.startTime) - n : 0),
                                    o = Math.max(a, i ? i.responseEnd - n : 0),
                                    u = Math.max(o, r ? r.startTime - n : 0),
                                    h = {
                                        element: l(r.element),
                                        timeToFirstByte: s,
                                        resourceLoadDelay: a - s,
                                        resourceLoadTime: o - a,
                                        elementRenderDelay: u - o,
                                        navigationEntry: t,
                                        lcpEntry: r
                                    };
                                return r.url && (h.url = r.url), i && (h.lcpResourceEntry = i), void (e.attribution = h)
                            }
                        }
                        e.attribution = {
                            timeToFirstByte: 0,
                            resourceLoadDelay: 0,
                            resourceLoadTime: 0,
                            elementRenderDelay: e.value
                        }
                    }(t),
                    e(t)
                }), t)
            },
            se = [800, 1800],
            ae = function e(t) {
                document.prerendering ? R((function() {
                    return e(t)
                })) : "complete" !== document.readyState ? addEventListener("load", (function() {
                    return e(t)
                }), !0) : setTimeout(t, 0)
            },
            oe = function(e, t) {
                t = t || {};
                var n = g("TTFB"),
                    r = y(e, n, se, t.reportAllChanges);
                ae((function() {
                    var i = c();
                    if (i) {
                        var s = i.responseStart;
                        if (s <= 0 || s > performance.now())
                            return;
                        n.value = Math.max(s - m(), 0),
                        n.entries = [i],
                        r(!0),
                        p((function() {
                            n = g("TTFB", 0),
                            (r = y(e, n, se, t.reportAllChanges))(!0)
                        }))
                    }
                }))
            },
            ce = function(e, t) {
                oe((function(t) {
                    !function(e) {
                        if (e.entries.length) {
                            var t = e.entries[0],
                                n = t.activationStart || 0,
                                r = Math.max(t.domainLookupStart - n, 0),
                                i = Math.max(t.connectStart - n, 0),
                                s = Math.max(t.requestStart - n, 0);
                            e.attribution = {
                                waitingTime: r,
                                dnsTime: i - r,
                                connectionTime: s - i,
                                requestTime: e.value - s,
                                navigationEntry: t
                            }
                        } else
                            e.attribution = {
                                waitingTime: 0,
                                dnsTime: 0,
                                connectionTime: 0,
                                requestTime: 0
                            }
                    }(t),
                    e(t)
                }), t)
            }
    }
}]);
